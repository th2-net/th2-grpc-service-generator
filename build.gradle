plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'java-library'
    id 'maven-publish'
    id "com.jfrog.bintray" version '1.8.5'
    id 'org.jetbrains.kotlin.jvm' version "1.3.72"
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 11
targetCompatibility = 11

ext {
    grpcVersion         = '1.32.1'
    protobufVersion     = '3.13.0'
    kotlin_version      = '1.3.72'
    slf4j_version       = '1.7.26'
    sharedDir           = file("${project.rootDir}/shared")
}

repositories {
    maven {
        name = 'localRepo'
        url = sharedDir
    }
    mavenCentral()
    maven {
        name 'Bintray'
        url 'https://dl.bintray.com/exactpro/th2'
    }
    mavenLocal()
    
  
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:2.3.+')

    // Grpc and Protobuf
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    api "com.google.protobuf:protobuf-java-util"
    api "io.grpc:grpc-stub"
    
    implementation "org.slf4j:slf4j-api:${slf4j_version}"
    
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"

    //For generation java code. License: Apache 2.0
    implementation "com.squareup:javapoet:1.13.0"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

manifest {
    attributes(
            'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
            'Specification-Title':      '',
            'Specification-Vendor':     'Exactpro Systems LLC',
            'Implementation-Title':     project.archivesBaseName,
            'Implementation-Vendor':    'Exactpro Systems LLC',
            'Implementation-Vendor-Id': 'com.exactpro',
            'Implementation-Version':   project.version
    )
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    (options as StandardJavadocDocletOptions).addBooleanOption("html5", true)
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            groupId group
            artifactId rootProject.name
            artifact("$buildDir/artifacts/${project.name}" as File) {
                classifier "all"
                extension "jar"
                builtBy shadowJar
            }
            pom.withXml {
                // This isn't any sort of Java archive artifact, and OSSRH doesn't enforce
                // javadoc for 'pom' packages. 'exe' would be a more appropriate packaging
                // value, but it isn't clear how that will be interpreted. In addition,
                // 'pom' is typically the value used when building an exe with Maven.
                asNode().project.packaging*.value = 'pom'
            }
        }
        
        bintrayPublication(MavenPublication) {
            from components.java
            groupId group
            artifactId rootProject.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('name', rootProject.name)
                root.appendNode('url', "${vcs_url}")
            }
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

bintray {
    user = "${bintray_user}"
    key = "${bintray_key}"
    publications = ['bintrayPublication']
    pkg {
        repo = 'th2'
        name = rootProject.name
        userOrg = 'exactpro'
        licenses = ['Apache-2.0']
        vcsUrl = "${vcs_url}"
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
    publish = true
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

mainClassName = "com.exactpro.th2.service.generator.protoc.Main"

shadowJar {
    //mergeServiceFiles()

    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
    
    archiveFileName = project.name
    destinationDirectory = "$buildDir/artifacts" as File
}

